import{Ca as y,Ga as w,Ha as a,Ja as E,d,g as f,j as k,l as s,n as i}from"./chunk-7XTECHTP.js";function D(t){return()=>new Promise(l=>{console.log("App initializer: attempting to refresh token"),t.refreshToken().subscribe({next:()=>{console.log("App initializer: token refresh successful"),l(!0)},error:e=>{console.log("App initializer: token refresh failed",e),l(!0)}})})}var b=(()=>{class t{constructor(e){this.accountService=e}intercept(e,n){return n.handle(e).pipe(f(o=>{let r=e.url.includes("/authenticate")||e.url.includes("/refresh-token");o.status===401&&this.accountService.accountValue?r||e.url.includes("/revoke-token")?(console.log("Authentication failed, logging out"),this.accountService.logout()):(console.log("API call returned 401, attempting to refresh token"),this.accountService.refreshToken().subscribe({error:()=>{console.log("Token refresh failed, logging out"),this.accountService.logout()}})):o.status===403&&this.accountService.accountValue&&console.log("Access forbidden to resource");let c=o&&o.error&&o.error.message||o.statusText;return console.error("API error:",o),d(c)}))}static{this.\u0275fac=function(n){return new(n||t)(i(a))}}static{this.\u0275prov=s({token:t,factory:t.\u0275fac})}}return t})();var P=(()=>{class t{constructor(e){this.accountService=e}intercept(e,n){let o=this.accountService.accountValue,r=o&&o.jwtToken,c=e.url.startsWith(w.apiUrl);if(console.log("JWT Interceptor - Request URL:",e.url),console.log("JWT Interceptor - Is API URL:",c),console.log("JWT Interceptor - Is Logged In:",r),r&&c){e=e.clone({setHeaders:{Authorization:`Bearer ${o.jwtToken}`}}),console.log("Sending authenticated request to:",e.url),console.log("User role:",o.role);let S=o.jwtToken.substring(0,15)+"...";console.log("Token preview:",S);try{let u=o.jwtToken.split(".");if(u.length===3){let p=JSON.parse(atob(u[1]));if(console.log("Token payload:",p),p.exp){let A=new Date(p.exp*1e3),I=new Date;console.log("Token expires:",A),console.log("Token expired:",A<I)}}}catch(u){console.error("Error parsing token:",u)}}else!r&&c&&console.warn("Making unauthenticated request to API URL:",e.url);return n.handle(e)}static{this.\u0275fac=function(n){return new(n||t)(i(a))}}static{this.\u0275prov=s({token:t,factory:t.\u0275fac})}}return t})();function x(t,l){return e=>{let n=e.controls[t],o=e.controls[l];o.errors&&!o.errors.mustMatch||(n.value!==o.value?o.setErrors({mustMatch:!0}):o.setErrors(null))}}var W=(()=>{class t{intercept(e,n){return e.url.includes("/authenticate")||e.url.includes("/refresh-token")||e.url.includes("/revoke-token")?n.handle(e):n.handle(e).pipe(k(2),f(r=>(console.log("API call error after retries:",r.status),d(r))))}static{this.\u0275fac=function(n){return new(n||t)}}static{this.\u0275prov=s({token:t,factory:t.\u0275fac})}}return t})();var z=(()=>{class t{constructor(e,n){this.router=e,this.accountService=n}canActivate(e,n){let o=this.accountService.accountValue;return o?e.data.roles&&!e.data.roles.includes(o.role)?(this.router.navigate(["/"]),!1):!0:(this.router.navigate(["/account/login"],{queryParams:{returnUrl:n.url}}),!1)}static{this.\u0275fac=function(n){return new(n||t)(i(y),i(a))}}static{this.\u0275prov=s({token:t,factory:t.\u0275fac,providedIn:"root"})}}return t})();var T="angular-10-signup-verification-boilerplate-accounts",h=JSON.parse(localStorage.getItem(T))||[];h=h.map(t=>(t.isActive===void 0&&(t.isActive=!0),t.role===E.Admin&&(t.isActive=!0),t.refreshTokens||(t.refreshTokens=[]),t));localStorage.setItem(T,JSON.stringify(h));export{D as a,z as b,b as c,P as d,x as e,W as f};
