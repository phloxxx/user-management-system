{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nconst _c0 = () => ({\n  standalone: true\n});\nfunction AddEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.errorMessage = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction AddEditComponent_div_7_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const employee_r4 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngValue\", employee_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getEmployeeDisplay(employee_r4.id), \" \");\n  }\n}\nfunction AddEditComponent_div_7_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵtext(1, \" Click \\\"Add Item\\\" below to add items to your request. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_7_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 31)(1, \"div\", 32)(2, \"div\", 33)(3, \"label\", 34);\n    i0.ɵɵtext(4, \"Name \");\n    i0.ɵɵelementStart(5, \"span\", 13);\n    i0.ɵɵtext(6, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"input\", 35);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_div_7_div_31_Template_input_ngModelChange_7_listener($event) {\n      const item_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      i0.ɵɵtwoWayBindingSet(item_r6.name, $event) || (item_r6.name = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 36)(9, \"label\", 34);\n    i0.ɵɵtext(10, \"Quantity \");\n    i0.ɵɵelementStart(11, \"span\", 13);\n    i0.ɵɵtext(12, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"input\", 37);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_div_7_div_31_Template_input_ngModelChange_13_listener($event) {\n      const item_r6 = i0.ɵɵrestoreView(_r5).$implicit;\n      i0.ɵɵtwoWayBindingSet(item_r6.quantity, $event) || (item_r6.quantity = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 38)(15, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_7_div_31_Template_button_click_15_listener() {\n      const i_r7 = i0.ɵɵrestoreView(_r5).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.removeItem(i_r7));\n    });\n    i0.ɵɵtext(16, \" Remove \");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const item_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(7);\n    i0.ɵɵtwoWayProperty(\"ngModel\", item_r6.name);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", item_r6.quantity);\n    i0.ɵɵproperty(\"ngModelOptions\", i0.ɵɵpureFunction0(6, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.request.requestItems.length === 1);\n  }\n}\nfunction AddEditComponent_div_7_span_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 40);\n  }\n}\nfunction AddEditComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 11)(2, \"label\", 12);\n    i0.ɵɵtext(3, \"Type \");\n    i0.ɵɵelementStart(4, \"span\", 13);\n    i0.ɵɵtext(5, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"select\", 14);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_div_7_Template_select_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.request.type, $event) || (ctx_r1.request.type = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(7, \"option\", 15);\n    i0.ɵɵtext(8, \"-- Select Type --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\");\n    i0.ɵɵtext(10, \"Equipment\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\");\n    i0.ɵɵtext(12, \"Leave\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\");\n    i0.ɵɵtext(14, \"Resources\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 11)(16, \"label\", 12);\n    i0.ɵɵtext(17, \"Employee \");\n    i0.ɵɵelementStart(18, \"span\", 13);\n    i0.ɵɵtext(19, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"select\", 14);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_div_7_Template_select_ngModelChange_20_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r1.request.employeeId, $event) || (ctx_r1.request.employeeId = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementStart(21, \"option\", 16);\n    i0.ɵɵtext(22, \"-- Select Employee --\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, AddEditComponent_div_7_option_23_Template, 2, 2, \"option\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 18)(25, \"label\", 12);\n    i0.ɵɵtext(26, \"Items \");\n    i0.ɵɵelementStart(27, \"span\", 13);\n    i0.ɵɵtext(28, \"*\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(29, \"div\", 19);\n    i0.ɵɵtemplate(30, AddEditComponent_div_7_div_30_Template, 2, 0, \"div\", 20)(31, AddEditComponent_div_7_div_31_Template, 17, 7, \"div\", 21);\n    i0.ɵɵelementStart(32, \"div\", 22)(33, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_7_Template_button_click_33_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addItem());\n    });\n    i0.ɵɵelement(34, \"i\", 24);\n    i0.ɵɵtext(35, \" Add Item \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementStart(36, \"div\", 25)(37, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_7_Template_button_click_37_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.save());\n    });\n    i0.ɵɵtemplate(38, AddEditComponent_div_7_span_38_Template, 1, 0, \"span\", 27);\n    i0.ɵɵtext(39, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"span\", 28);\n    i0.ɵɵelementStart(41, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_7_Template_button_click_41_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.cancel());\n    });\n    i0.ɵɵtext(42, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.request.type);\n    i0.ɵɵadvance(14);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r1.request.employeeId);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.employees);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.request.requestItems.length === 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.request.requestItems);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.submitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitting);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.submitting);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(requestService, employeeService, accountService, alertService, workflowService, route, router, location) {\n      this.requestService = requestService;\n      this.employeeService = employeeService;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.workflowService = workflowService;\n      this.route = route;\n      this.router = router;\n      this.location = location;\n      this.request = {\n        employeeId: null,\n        type: '',\n        status: 'Pending',\n        requestItems: []\n      };\n      this.employees = [];\n      this.accounts = [];\n      this.loading = false;\n      this.submitting = false;\n      this.errorMessage = '';\n      this.currentUser = null;\n      this.initialRequestItems = [];\n      this.currentUser = this.accountService.accountValue;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      // Check for employeeId in query params for new requests\n      if (!this.id) {\n        this.route.queryParams.subscribe(params => {\n          if (params.employeeId) {\n            this.request.employeeId = Number(params.employeeId);\n            console.log(`Pre-filling request for employee ID: ${this.request.employeeId}`);\n          }\n        });\n      }\n      this.loading = true;\n      // Load reference data first\n      forkJoin({\n        employees: this.employeeService.getAll(),\n        accounts: this.accountService.getAll()\n      }).pipe(first()).subscribe({\n        next: data => {\n          this.employees = data.employees || [];\n          this.accounts = data.accounts || [];\n          console.log('Loaded reference data:', {\n            employees: this.employees.length,\n            accounts: this.accounts.length\n          });\n          // If this is a new request and we haven't already set the employee from query params\n          if (!this.id && !this.request.employeeId && this.currentUser) {\n            // Find the employee matching the current user\n            const currentUserEmployee = this.employees.find(e => e.userId === this.currentUser.id);\n            if (currentUserEmployee) {\n              this.request.employeeId = currentUserEmployee.id;\n              console.log(`Auto-selected employee ID ${this.request.employeeId} for the current user`);\n            }\n          }\n          // After loading reference data, load the specific request if editing\n          if (this.id) {\n            this.loadRequest();\n          } else {\n            // For new requests, add at least one item row\n            if (!this.request.requestItems || !this.request.requestItems.length) {\n              this.addItem();\n            }\n            this.loading = false;\n          }\n        },\n        error: error => {\n          console.error('Error loading reference data:', error);\n          this.errorMessage = 'Failed to load reference data';\n          this.loading = false;\n        }\n      });\n      // Initialize with at least one item\n      if (!this.request.requestItems || this.request.requestItems.length === 0) {\n        this.addItem();\n      }\n    }\n    loadRequest() {\n      this.requestService.getById(this.id).pipe(first()).subscribe({\n        next: request => {\n          if (request) {\n            console.log('Loaded request data for editing:', request);\n            this.request = request;\n            // Fix for items not displaying - check for both RequestItems and requestItems\n            if (request['RequestItems'] && Array.isArray(request['RequestItems']) && request['RequestItems'].length > 0) {\n              console.log('Found items in RequestItems:', request['RequestItems']);\n              this.request.requestItems = request['RequestItems'];\n            } else if (!this.request.requestItems || this.request.requestItems.length === 0) {\n              console.log('No items found in request, creating empty item');\n              this.request.requestItems = [];\n              this.addItem();\n            } else {\n              console.log('Found items in requestItems:', this.request.requestItems);\n            }\n            // Save a copy of the initial request items for comparison\n            this.initialRequestItems = JSON.parse(JSON.stringify(this.request.requestItems || []));\n          }\n          this.loading = false;\n        },\n        error: error => {\n          console.error(`Error loading request ${this.id}:`, error);\n          this.errorMessage = 'Failed to load request';\n          this.loading = false;\n        }\n      });\n    }\n    // Add a new request item\n    addItem() {\n      if (!this.request.requestItems) {\n        this.request.requestItems = [];\n      }\n      this.request.requestItems.push({\n        name: '',\n        quantity: 1\n      });\n    }\n    // Remove a request item by index\n    removeItem(index) {\n      if (this.request.requestItems) {\n        this.request.requestItems.splice(index, 1);\n        // Ensure there's always at least one item\n        if (this.request.requestItems.length === 0) {\n          this.addItem();\n        }\n      }\n    }\n    // Save the request\n    save() {\n      this.submitting = true;\n      this.errorMessage = '';\n      // Validate form\n      if (!this.request.type || !this.request.employeeId) {\n        this.errorMessage = 'Please fill in all required fields';\n        this.submitting = false;\n        return;\n      }\n      // Make sure there's at least one item with a name\n      if (!this.request.requestItems || this.request.requestItems.length === 0) {\n        this.addItem();\n      }\n      // Make sure all items have names\n      const hasInvalidItems = this.request.requestItems.some(item => !item.name || !item.quantity || item.quantity < 1);\n      if (hasInvalidItems) {\n        this.errorMessage = 'Please ensure all items have a name and quantity';\n        this.submitting = false;\n        return;\n      }\n      console.log('About to save request with items:', this.request.requestItems);\n      // Create a clean version of the request to send to the API\n      const requestToSave = {\n        ...this.request,\n        // Make sure employeeId is a number\n        employeeId: typeof this.request.employeeId === 'string' ? parseInt(this.request.employeeId) : this.request.employeeId,\n        // Make sure items are properly formatted and non-empty\n        requestItems: this.request.requestItems.filter(item => item.name && item.name.trim() !== '').map(item => ({\n          id: item.id,\n          // Keep the ID for existing items\n          name: item.name,\n          quantity: parseInt(item.quantity?.toString() || '1'),\n          description: item.description || ''\n        }))\n      };\n      console.log('Cleaned request to save:', requestToSave);\n      if (this.id) {\n        // Update existing request\n        this.requestService.update(this.id, requestToSave).pipe(first()).subscribe({\n          next: savedRequest => {\n            this.createOrUpdateWorkflow(savedRequest);\n            this.alertService.success('Request updated', {\n              keepAfterRouteChange: true\n            });\n            setTimeout(() => this.router.navigate(['/admin/requests']), 500);\n          },\n          error: error => {\n            this.errorMessage = typeof error === 'string' ? error : 'Failed to update request';\n            this.submitting = false;\n          }\n        });\n      } else {\n        // Create new request\n        this.requestService.create(requestToSave).pipe(first()).subscribe({\n          next: newRequest => {\n            this.createOrUpdateWorkflow(newRequest);\n            this.alertService.success('Request created', {\n              keepAfterRouteChange: true\n            });\n            setTimeout(() => this.router.navigate(['/admin/requests']), 500);\n          },\n          error: error => {\n            this.errorMessage = typeof error === 'string' ? error : 'Failed to create request';\n            this.submitting = false;\n          }\n        });\n      }\n    }\n    // Helper method to create or update a workflow for the request\n    createOrUpdateWorkflow(request) {\n      // Skip workflow creation if request is invalid\n      if (!request || !request.id) {\n        console.warn('Cannot create workflow for invalid request:', request);\n        return;\n      }\n      // Ensure we have a valid employeeId and convert it to a number\n      const employeeId = typeof request.employeeId === 'string' ? parseInt(request.employeeId, 10) : request.employeeId;\n      if (!employeeId) {\n        console.warn('Cannot create workflow without employeeId:', request);\n        return;\n      }\n      // Format item details with name and quantity clearly displayed\n      const itemsText = request.requestItems ? request.requestItems.map(item => {\n        return `${item.name} (x${item.quantity})`;\n      }).join(', ') : '';\n      // Create workflow object with detailed information\n      const workflow = {\n        employeeId: employeeId,\n        type: `${request.type} Request`,\n        details: {\n          items: itemsText,\n          requestId: request.id\n        },\n        status: 'Pending'\n      };\n      console.log('Creating workflow for request:', workflow);\n      // Call the workflow service to create the workflow\n      this.workflowService.create(workflow).pipe(first()).subscribe({\n        next: () => console.log('Workflow created successfully for request', request.id),\n        error: error => console.error('Error creating workflow:', error)\n      });\n    }\n    cancel() {\n      // When canceling, ensure we don't clear the request cache\n      // Navigate to requests list, but use our back function with skipLocationChange\n      // to avoid adding a new browser history entry\n      // First, make sure any data is saved to cache before navigating\n      if (this.id) {\n        this.requestService.getById(this.id).pipe(first()).subscribe({\n          next: () => {\n            console.log('Request data refreshed in cache before navigation');\n            this.location.back();\n          },\n          error: () => this.location.back()\n        });\n      } else {\n        // Just go back for new requests\n        this.location.back();\n      }\n    }\n    // Helper method to get the employee name or email\n    getEmployeeDisplay(id) {\n      if (id === null || id === undefined) return 'Select Employee';\n      const employee = this.employees.find(e => e.id === id);\n      if (!employee) return `Unknown (ID: ${id})`;\n      const account = this.accounts.find(a => a.id === employee.userId);\n      if (!account) return employee.employeeId;\n      return `${account.email} (${employee.employeeId})`;\n    }\n    static {\n      this.ɵfac = function AddEditComponent_Factory(t) {\n        return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i1.WorkflowService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.Location));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddEditComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 8,\n        vars: 4,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"text-center py-3\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"text-center\", \"py-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"alert\", \"alert-danger\"], [\"type\", \"button\", 1, \"btn-close\", \"float-end\", 3, \"click\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"text-danger\"], [1, \"form-select\", 3, \"ngModelChange\", \"ngModel\"], [\"value\", \"\"], [3, \"ngValue\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-4\"], [1, \"request-items-container\", \"border\", \"rounded\", \"p-3\", \"bg-light\"], [\"class\", \"text-center text-muted py-3\", 4, \"ngIf\"], [\"class\", \"mb-3 item-row\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-3\", \"text-start\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"bi\", \"bi-plus-circle\", \"me-1\"], [1, \"d-flex\", \"justify-content-center\", \"mt-4\"], [1, \"btn\", \"btn-primary\", 3, \"click\", \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [2, \"display\", \"inline-block\", \"width\", \"10px\"], [1, \"btn\", \"btn-secondary\", 3, \"click\", \"disabled\"], [1, \"text-center\", \"text-muted\", \"py-3\"], [1, \"mb-3\", \"item-row\"], [1, \"row\", \"g-2\"], [1, \"col-md-6\"], [1, \"form-label\", \"d-block\"], [\"type\", \"text\", \"placeholder\", \"Enter item name\", 1, \"form-control\", \"w-100\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [1, \"col-md-4\"], [\"type\", \"number\", \"min\", \"1\", \"placeholder\", \"Enter quantity\", 1, \"form-control\", \"w-100\", 3, \"ngModelChange\", \"ngModel\", \"ngModelOptions\"], [1, \"col-md-2\", \"d-flex\", \"align-items-end\"], [1, \"btn\", \"btn-danger\", \"w-100\", 3, \"click\", \"disabled\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n        template: function AddEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵtemplate(5, AddEditComponent_div_5_Template, 2, 0, \"div\", 4)(6, AddEditComponent_div_6_Template, 3, 1, \"div\", 5)(7, AddEditComponent_div_7_Template, 43, 8, \"div\", 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"EDIT\" : \"ADD\", \" REQUEST\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          }\n        },\n        dependencies: [i3.NgForOf, i3.NgIf, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.DefaultValueAccessor, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i4.NgControlStatus, i4.MinValidator, i4.NgModel],\n        styles: [\".form-label[_ngcontent-%COMP%] {\\n        font-weight: 500;\\n        margin-bottom: 0.5rem;\\n        display: block;\\n    }\\n    \\n    .form-select[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%] {\\n        padding: 0.5rem;\\n        border-radius: 0.25rem;\\n        border: 1px solid #ced4da;\\n        background-color: #fff;\\n        height: 38px;\\n        width: 100%;\\n    }\\n    \\n    .form-select[_ngcontent-%COMP%] {\\n        appearance: auto;\\n        -webkit-appearance: auto;\\n    }\\n    \\n    .card-header[_ngcontent-%COMP%] {\\n        background-color: #f8f9fa;\\n        border-bottom: 1px solid rgba(0,0,0,.125);\\n    }\\n    \\n    .btn[_ngcontent-%COMP%] {\\n        padding: 0.375rem 1rem;\\n    }\\n    \\n    .request-items-container[_ngcontent-%COMP%] {\\n        transition: all 0.3s ease;\\n        max-height: 500px;\\n        overflow-y: auto;\\n    }\\n    \\n    .item-row[_ngcontent-%COMP%] {\\n        padding: 10px;\\n        border-bottom: 1px solid #e9ecef;\\n    }\\n    \\n    .item-row[_ngcontent-%COMP%]:last-child {\\n        border-bottom: none;\\n    }\\n    \\n    .bg-light[_ngcontent-%COMP%] {\\n        background-color: #f8f9fa;\\n    }\\n    \\n    .border[_ngcontent-%COMP%] {\\n        border: 1px solid #dee2e6 !important;\\n    }\\n    \\n    .rounded[_ngcontent-%COMP%] {\\n        border-radius: 0.25rem !important;\\n    }\\n    \\n    .p-3[_ngcontent-%COMP%] {\\n        padding: 1rem !important;\\n    }\\n    \\n    \\n\\n    .form-control[_ngcontent-%COMP%]:focus, .form-select[_ngcontent-%COMP%]:focus {\\n        border-color: #80bdff;\\n        box-shadow: 0 0 0 0.2rem rgba(0,123,255,.25);\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%] {\\n        background: transparent;\\n        border: 0;\\n        font-size: 1.5rem;\\n        padding: 0.25rem;\\n        cursor: pointer;\\n        opacity: 0.5;\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%]:hover {\\n        opacity: 1;\\n    }\\n    \\n    .float-end[_ngcontent-%COMP%] {\\n        float: right;\\n    }\"]\n      });\n    }\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}