{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@app/_services\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"span\", 7);\n    i0.ɵɵtext(2, \" Loading... \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 9);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.error = \"\");\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.error, \" \");\n  }\n}\nfunction AddEditComponent_form_6_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Name is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_6_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_form_6_div_5_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.name.errors.required);\n  }\n}\nfunction AddEditComponent_form_6_div_10_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1, \"Description is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_form_6_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵtemplate(1, AddEditComponent_form_6_div_10_div_1_Template, 2, 0, \"div\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.f.description.errors.required);\n  }\n}\nfunction AddEditComponent_form_6_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 23);\n  }\n}\nfunction AddEditComponent_form_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"form\", 10);\n    i0.ɵɵlistener(\"ngSubmit\", function AddEditComponent_form_6_Template_form_ngSubmit_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(1, \"div\", 11)(2, \"label\", 12);\n    i0.ɵɵtext(3, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 13);\n    i0.ɵɵtemplate(5, AddEditComponent_form_6_div_5_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 11)(7, \"label\", 12);\n    i0.ɵɵtext(8, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(9, \"input\", 15);\n    i0.ɵɵtemplate(10, AddEditComponent_form_6_div_10_Template, 2, 1, \"div\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 16)(12, \"button\", 17);\n    i0.ɵɵtemplate(13, AddEditComponent_form_6_span_13_Template, 1, 0, \"span\", 18);\n    i0.ɵɵtext(14, \" Save \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(15, \"span\", 19);\n    i0.ɵɵelementStart(16, \"button\", 20);\n    i0.ɵɵtext(17, \"Cancel\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(8, _c0, ctx_r1.submitted && ctx_r1.f.name.errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && ctx_r1.f.name.errors);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, ctx_r1.submitted && ctx_r1.f.description.errors));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitted && ctx_r1.f.description.errors);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.submitting);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.submitting);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.submitting);\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(formBuilder, departmentService, alertService, route, router) {\n      this.formBuilder = formBuilder;\n      this.departmentService = departmentService;\n      this.alertService = alertService;\n      this.route = route;\n      this.router = router;\n      this.loading = false;\n      this.submitting = false;\n      this.submitted = false;\n      this.error = '';\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isAddMode = !this.id;\n      // Form validation\n      this.form = this.formBuilder.group({\n        name: ['', Validators.required],\n        description: ['', Validators.required]\n      });\n      if (!this.isAddMode) {\n        this.loading = true;\n        this.departmentService.getById(this.id).pipe(first()).subscribe({\n          next: department => {\n            this.form.patchValue(department);\n            this.loading = false;\n          },\n          error: error => {\n            this.error = 'Error loading department data';\n            this.alertService.error(this.error);\n            this.loading = false;\n            console.error('Error loading department:', error);\n          }\n        });\n      }\n    }\n    // Convenience getter for easy access to form fields\n    get f() {\n      return this.form.controls;\n    }\n    onSubmit() {\n      this.submitted = true;\n      this.error = '';\n      // Reset alerts\n      this.alertService.clear();\n      // Stop here if form is invalid\n      if (this.form.invalid) {\n        return;\n      }\n      this.submitting = true;\n      // Create the department object\n      const department = {\n        name: this.form.value.name,\n        description: this.form.value.description\n      };\n      console.log('Submitting department:', department);\n      if (this.isAddMode) {\n        this.createDepartment(department);\n      } else {\n        this.updateDepartment(department);\n      }\n    }\n    createDepartment(department) {\n      this.departmentService.create(department).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department added successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.error = error?.message || 'Error adding department';\n          this.alertService.error(this.error);\n          this.submitting = false;\n          console.error('Error creating department:', error);\n        }\n      });\n    }\n    updateDepartment(department) {\n      this.departmentService.update(this.id, department).pipe(first()).subscribe({\n        next: () => {\n          this.alertService.success('Department updated successfully', {\n            keepAfterRouteChange: true\n          });\n          this.router.navigate(['../../'], {\n            relativeTo: this.route\n          });\n        },\n        error: error => {\n          this.error = error?.message || 'Error updating department';\n          this.alertService.error(this.error);\n          this.submitting = false;\n          console.error('Error updating department:', error);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function AddEditComponent_Factory(t) {\n        return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DepartmentService), i0.ɵɵdirectiveInject(i2.AlertService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddEditComponent,\n        selectors: [[\"app-add-edit\"]],\n        decls: 7,\n        vars: 4,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"card-body\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\", 4, \"ngIf\"], [1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-sm\"], [1, \"alert\", \"alert-danger\"], [\"type\", \"button\", 1, \"btn-close\", \"float-end\", 3, \"click\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"description\", 1, \"form-control\", 3, \"ngClass\"], [1, \"text-center\", \"mt-4\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [\"class\", \"spinner-border spinner-border-sm me-1\", 4, \"ngIf\"], [2, \"display\", \"inline-block\", \"width\", \"10px\"], [\"type\", \"button\", \"routerLink\", \"/admin/departments\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\", \"me-1\"]],\n        template: function AddEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"h5\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"div\", 2);\n            i0.ɵɵtemplate(4, AddEditComponent_div_4_Template, 3, 0, \"div\", 3)(5, AddEditComponent_div_5_Template, 3, 1, \"div\", 4)(6, AddEditComponent_form_6_Template, 18, 12, \"form\", 5);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate(ctx.isAddMode ? \"Add Department\" : \"Edit Department\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          }\n        },\n        dependencies: [i4.NgClass, i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n        styles: [\".invalid-feedback[_ngcontent-%COMP%] {\\n        display: block;\\n        width: 100%;\\n        margin-top: 0.25rem;\\n        font-size: 80%;\\n        color: #dc3545;\\n    }\\n    \\n    .is-invalid[_ngcontent-%COMP%] {\\n        border-color: #dc3545;\\n    }\\n    \\n    .text-danger[_ngcontent-%COMP%] {\\n        color: #dc3545;\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%] {\\n        background: transparent;\\n        border: 0;\\n        font-size: 1.5rem;\\n        padding: 0.25rem;\\n        cursor: pointer;\\n        opacity: 0.5;\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%]:hover {\\n        opacity: 1;\\n    }\\n    \\n    .float-end[_ngcontent-%COMP%] {\\n        float: right;\\n    }\"]\n      });\n    }\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}