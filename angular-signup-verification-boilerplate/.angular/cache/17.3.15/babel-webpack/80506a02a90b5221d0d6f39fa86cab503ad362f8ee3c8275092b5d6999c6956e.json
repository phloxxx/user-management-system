{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ListComponent_tr_19_span_8_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵelement(1, \"i\", 14);\n    i0.ɵɵtext(2, \" Active \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_tr_19_span_8_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 15);\n    i0.ɵɵelement(1, \"i\", 16);\n    i0.ɵɵtext(2, \" Deactivated \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_tr_19_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtemplate(1, ListComponent_tr_19_span_8_span_1_Template, 3, 0, \"span\", 11)(2, ListComponent_tr_19_span_8_span_2_Template, 3, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", account_r1.isActive);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !account_r1.isActive);\n  }\n}\nfunction ListComponent_tr_19_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1, \"N/A\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_tr_19_button_13_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n}\nfunction ListComponent_tr_19_button_13_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(account_r1.isActive ? \"Deactivate\" : \"Activate\");\n  }\n}\nfunction ListComponent_tr_19_button_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function ListComponent_tr_19_button_13_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const account_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.toggleAccountStatus(account_r1.id));\n    });\n    i0.ɵɵtemplate(1, ListComponent_tr_19_button_13_span_1_Template, 1, 0, \"span\", 19)(2, ListComponent_tr_19_button_13_span_2_Template, 2, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const account_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"disabled\", account_r1.isToggling)(\"ngClass\", account_r1.isActive ? \"btn-danger\" : \"btn-success\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", account_r1.isToggling);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !account_r1.isToggling);\n  }\n}\nfunction ListComponent_tr_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtemplate(8, ListComponent_tr_19_span_8_Template, 3, 2, \"span\", 6)(9, ListComponent_tr_19_span_9_Template, 2, 0, \"span\", 7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\", 8)(11, \"a\", 9);\n    i0.ɵɵtext(12, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, ListComponent_tr_19_button_13_Template, 3, 4, \"button\", 10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const account_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", account_r1.firstName, \" \", account_r1.lastName, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(account_r1.role);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", account_r1.role !== \"Admin\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", account_r1.role === \"Admin\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"routerLink\", \"edit/\", account_r1.id, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", account_r1.role !== \"Admin\");\n  }\n}\nfunction ListComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\", 21);\n    i0.ɵɵelement(2, \"span\", 22);\n    i0.ɵɵelementEnd()();\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(accountService, alertService) {\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.loading = false;\n    }\n    ngOnInit() {\n      this.loading = true;\n      this.accountService.getAll().pipe(first()).subscribe({\n        next: accounts => {\n          this.accounts = accounts;\n          this.loading = false;\n        },\n        error: error => {\n          this.alertService.error('Error loading accounts: ' + (error?.message || 'Unknown error'));\n          this.loading = false;\n        }\n      });\n    }\n    deleteAccount(id) {\n      const account = this.accounts.find(x => x.id === id);\n      account.isDeleting = true;\n      this.accountService.delete(id).pipe(first()).subscribe({\n        next: () => {\n          this.accounts = this.accounts.filter(x => x.id !== id);\n          this.alertService.success('Account deleted successfully');\n        },\n        error: error => {\n          this.alertService.error('Error deleting account: ' + (error?.message || 'Unknown error'));\n          account.isDeleting = false;\n        }\n      });\n    }\n    toggleAccountStatus(id) {\n      const account = this.accounts.find(x => x.id === id);\n      // Don't allow toggling if account is an admin\n      if (account.role === 'Admin') {\n        this.alertService.error('Cannot change status of admin accounts');\n        return;\n      }\n      account.isToggling = true;\n      // Toggle the account status\n      const newStatus = !account.isActive;\n      const statusText = newStatus ? 'activated' : 'deactivated';\n      this.accountService.updateStatus(id, newStatus).pipe(first()).subscribe({\n        next: response => {\n          // Update the account status locally after successful API call\n          account.isActive = newStatus;\n          this.alertService.success(`Account ${statusText} successfully`);\n          // Display appropriate message about login access\n          if (newStatus) {\n            this.alertService.info(`User can now log in to the system`);\n          } else {\n            this.alertService.warn(`User has been blocked from logging in`);\n          }\n        },\n        error: error => {\n          this.alertService.error(`Error updating account status: ${error?.message || 'Server error occurred'}`);\n        },\n        complete: () => {\n          account.isToggling = false;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function ListComponent_Factory(t) {\n        return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i1.AlertService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ListComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 21,\n        vars: 2,\n        consts: [[\"routerLink\", \"add\", 1, \"btn\", \"btn-sn\", \"btn-success\", \"mb-2\"], [1, \"table\", \"table-striped\"], [2, \"width\", \"25%\"], [2, \"width\", \"20%\"], [2, \"width\", \"15%\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [2, \"white-space\", \"nowrap\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", \"mr-1\", 3, \"routerLink\"], [\"class\", \"btn btn-sm mr-1\", 3, \"disabled\", \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"badge badge-pill badge-success py-1 px-2\", 4, \"ngIf\"], [\"class\", \"badge badge-pill badge-danger py-1 px-2\", 4, \"ngIf\"], [1, \"badge\", \"badge-pill\", \"badge-success\", \"py-1\", \"px-2\"], [1, \"fas\", \"fa-check-circle\", \"mr-1\"], [1, \"badge\", \"badge-pill\", \"badge-danger\", \"py-1\", \"px-2\"], [1, \"fas\", \"fa-times-circle\", \"mr-1\"], [1, \"text-muted\"], [1, \"btn\", \"btn-sm\", \"mr-1\", 3, \"click\", \"disabled\", \"ngClass\"], [\"class\", \"spinner-border spinner-border-sm\", 4, \"ngIf\"], [1, \"spinner-border\", \"spinner-border-sm\"], [\"colspan\", \"5\", 1, \"text-center\"], [1, \"spinner-border\", \"spinner-border-lg\", \"align-center\"]],\n        template: function ListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"h1\");\n            i0.ɵɵtext(1, \"Account\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(2, \"p\");\n            i0.ɵɵtext(3, \"All accounts from secure (admin only) api end point:\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(4, \"a\", 0);\n            i0.ɵɵtext(5, \"Create Account\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"table\", 1)(7, \"thead\")(8, \"tr\")(9, \"th\", 2);\n            i0.ɵɵtext(10, \"Name\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(11, \"th\", 2);\n            i0.ɵɵtext(12, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(13, \"th\", 3);\n            i0.ɵɵtext(14, \"Role\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"th\", 4);\n            i0.ɵɵtext(16, \"Status\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(17, \"th\", 4);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(18, \"tbody\");\n            i0.ɵɵtemplate(19, ListComponent_tr_19_Template, 14, 9, \"tr\", 5)(20, ListComponent_tr_20_Template, 3, 0, \"tr\", 6);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(19);\n            i0.ɵɵproperty(\"ngForOf\", ctx.accounts);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.accounts);\n          }\n        },\n        dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i3.RouterLink],\n        encapsulation: 2\n      });\n    }\n  }\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}