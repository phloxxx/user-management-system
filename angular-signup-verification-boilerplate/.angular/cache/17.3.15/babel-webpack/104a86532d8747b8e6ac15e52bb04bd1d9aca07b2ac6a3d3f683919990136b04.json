{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { retry, catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport let RetryInterceptor = /*#__PURE__*/(() => {\n  class RetryInterceptor {\n    intercept(request, next) {\n      // Skip retry for authentication-related endpoints\n      const skipRetry = request.url.includes('/authenticate') || request.url.includes('/refresh-token') || request.url.includes('/revoke-token');\n      if (skipRetry) {\n        return next.handle(request);\n      }\n      // Apply retry mechanism (3 attempts) to all other API calls\n      return next.handle(request).pipe(retry(2), catchError(error => {\n        console.log(`API call error after retries:`, error.status);\n        return throwError(error);\n      }));\n    }\n    static {\n      this.ɵfac = function RetryInterceptor_Factory(t) {\n        return new (t || RetryInterceptor)();\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: RetryInterceptor,\n        factory: RetryInterceptor.ɵfac\n      });\n    }\n  }\n  return RetryInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}