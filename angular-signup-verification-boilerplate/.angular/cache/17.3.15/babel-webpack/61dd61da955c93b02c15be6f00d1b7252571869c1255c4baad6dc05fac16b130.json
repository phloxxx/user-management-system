{"ast":null,"code":"import { first, catchError } from 'rxjs/operators';\nimport { forkJoin, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/_services\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nconst _c0 = (a0, a1, a2, a3) => ({\n  \"bg-warning\": a0,\n  \"bg-success\": a1,\n  \"bg-danger\": a2,\n  \"bg-info\": a3\n});\nfunction ListComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"p\", 12);\n    i0.ɵɵtext(3, \"Loading requests...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_9_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.retry());\n    });\n    i0.ɵɵtext(4, \"Retry\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.error);\n  }\n}\nfunction ListComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"p\");\n    i0.ɵɵtext(2, \"No requests found. Click the button below to add a request.\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_10_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.add());\n    });\n    i0.ɵɵtext(4, \"Add Request\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction ListComponent_div_11_tr_15_ng_container_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", item_r5.name, \" (x\", item_r5.quantity, \") \");\n  }\n}\nfunction ListComponent_div_11_tr_15_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ListComponent_div_11_tr_15_ng_container_6_div_1_Template, 2, 2, \"div\", 24);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const request_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", request_r6.requestItems);\n  }\n}\nfunction ListComponent_div_11_tr_15_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" No items \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_div_11_tr_15_button_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_11_tr_15_button_15_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const request_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.delete(request_r6.id));\n    });\n    i0.ɵɵtext(1, \"Delete\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_div_11_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, ListComponent_div_11_tr_15_ng_container_6_Template, 2, 1, \"ng-container\", 19)(7, ListComponent_div_11_tr_15_div_7_Template, 2, 0, \"div\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\")(9, \"span\", 21);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"td\")(12, \"div\", 22)(13, \"button\", 4);\n    i0.ɵɵlistener(\"click\", function ListComponent_div_11_tr_15_Template_button_click_13_listener() {\n      const request_r6 = i0.ɵɵrestoreView(_r4).$implicit;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.edit(request_r6.id));\n    });\n    i0.ɵɵtext(14, \"Edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, ListComponent_div_11_tr_15_button_15_Template, 2, 0, \"button\", 23);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    let tmp_9_0;\n    const request_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(request_r6.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.getEmployeeInfo(request_r6.employeeId));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", request_r6.requestItems && request_r6.requestItems.length > 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !request_r6.requestItems || request_r6.requestItems.length === 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(7, _c0, request_r6.status === \"Pending\", request_r6.status === \"Approved\", request_r6.status === \"Rejected\", request_r6.status === \"Completed\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(request_r6.status);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_9_0 = ctx_r1.account()) == null ? null : tmp_9_0.role) === \"Admin\");\n  }\n}\nfunction ListComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"table\", 17)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"Employee\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Items\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(14, \"tbody\");\n    i0.ɵɵtemplate(15, ListComponent_div_11_tr_15_Template, 16, 12, \"tr\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.requests);\n  }\n}\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    constructor(requestService, accountService, employeeService, alertService, router, route) {\n      this.requestService = requestService;\n      this.accountService = accountService;\n      this.employeeService = employeeService;\n      this.alertService = alertService;\n      this.router = router;\n      this.route = route;\n      this.requests = [];\n      this.employees = [];\n      this.accounts = [];\n      this.loading = false;\n      this.error = '';\n      this.employeeIdFilter = null;\n      this.retryAttempts = 0;\n      this.maxRetryAttempts = 2;\n    }\n    ngOnInit() {\n      this.loading = true;\n      // Check for employeeId query parameter\n      this.route.queryParams.subscribe(params => {\n        if (params.employeeId) {\n          this.employeeIdFilter = params.employeeId;\n          console.log(`Filtering requests for employee ID: ${this.employeeIdFilter}`);\n        }\n      });\n      // Load reference data\n      forkJoin({\n        employees: this.employeeService.getAll().pipe(first(), catchError(error => {\n          console.error('Error loading employees:', error);\n          return of([]);\n        })),\n        accounts: this.accountService.getAll().pipe(first(), catchError(error => {\n          console.error('Error loading accounts:', error);\n          return of([]);\n        }))\n      }).subscribe({\n        next: data => {\n          this.employees = data.employees || [];\n          this.accounts = data.accounts || [];\n          console.log('Loaded employees:', this.employees.length);\n          console.log('Loaded accounts:', this.accounts.length);\n          // After loading reference data, load requests\n          this.loadRequests();\n        },\n        error: error => {\n          console.error('Error loading reference data:', error);\n          // Still try to load requests even if reference data failed\n          this.loadRequests();\n        }\n      });\n    }\n    loadRequests() {\n      this.loading = true;\n      this.error = '';\n      const observable = this.employeeIdFilter ? this.requestService.getByEmployee(Number(this.employeeIdFilter)) : this.requestService.getAll();\n      observable.pipe(first()).subscribe({\n        next: requests => {\n          this.requests = requests || [];\n          // Normalize request items for all requests - ensure we only use requestItems (lowercase)\n          this.requests = this.requests.map(request => {\n            // Handle possible API inconsistency (API might return items as RequestItems)\n            if (request['RequestItems'] && !request.requestItems) {\n              request.requestItems = request['RequestItems'];\n            } else if (!request.requestItems) {\n              request.requestItems = [];\n            }\n            return request;\n          });\n          console.log(`Loaded ${this.requests.length} requests with items:`, this.requests.map(r => ({\n            id: r.id,\n            items: r.requestItems?.length || 0\n          })));\n          this.loading = false;\n        },\n        error: error => {\n          console.error('Error loading requests:', error);\n          this.error = 'Failed to load requests';\n          this.loading = false;\n          // If we still have earlier data, don't clear it\n          if (this.requests.length === 0) {\n            this.loadMockData();\n          }\n        }\n      });\n    }\n    loadMockData() {\n      console.log('Loading mock request data as fallback');\n      this.requests = [{\n        id: 1,\n        employeeId: this.employeeIdFilter ? Number(this.employeeIdFilter) : 1,\n        type: 'Equipment',\n        status: 'Pending',\n        requestItems: [{\n          id: 1,\n          name: 'Laptop',\n          quantity: 1\n        }, {\n          id: 2,\n          name: 'Monitor',\n          quantity: 2\n        }]\n      }, {\n        id: 2,\n        employeeId: this.employeeIdFilter ? Number(this.employeeIdFilter) : 2,\n        type: 'Office Supplies',\n        status: 'Approved',\n        requestItems: [{\n          id: 3,\n          name: 'Notebooks',\n          quantity: 5\n        }, {\n          id: 4,\n          name: 'Pens',\n          quantity: 10\n        }]\n      }];\n      this.loading = false;\n      this.error = 'Using sample data - API connection failed';\n    }\n    getEmployeeInfo(employeeId) {\n      if (!employeeId) return 'Unknown';\n      // Find the employee by ID\n      const employee = this.employees.find(emp => emp.id === employeeId);\n      if (employee) {\n        // Find the associated account for this employee\n        const account = this.accounts.find(acc => acc.id === employee.userId);\n        if (account) {\n          // Return email and role as shown in the image\n          const role = account.role === 'Admin' ? 'Admin User' : 'Normal User';\n          return `${account.email} (${role})`;\n        }\n        return `${employee.employeeId}`;\n      }\n      return `Employee ID: ${employeeId}`;\n    }\n    // Account method to return the current user\n    account() {\n      return this.accountService.accountValue;\n    }\n    add() {\n      // If we have an employee filter, pass it to the add page\n      if (this.employeeIdFilter) {\n        this.router.navigate(['/admin/requests/add'], {\n          queryParams: {\n            employeeId: this.employeeIdFilter\n          }\n        });\n      } else {\n        this.router.navigate(['/admin/requests/add']);\n      }\n    }\n    edit(id) {\n      this.router.navigate(['/admin/requests/edit', id]);\n    }\n    delete(id) {\n      const request = this.requests.find(r => r.id === id);\n      if (!request) return;\n      if (confirm('Are you sure you want to delete this request?')) {\n        this.requestService.delete(id.toString()).pipe(first()).subscribe({\n          next: () => {\n            this.alertService.success('Request deleted successfully');\n            this.requests = this.requests.filter(r => r.id !== id);\n          },\n          error: error => {\n            this.alertService.error('Error deleting request');\n            console.error('Error deleting request:', error);\n          }\n        });\n      }\n    }\n    retry() {\n      this.error = '';\n      this.retryAttempts++;\n      this.loadRequests();\n    }\n    static {\n      this.ɵfac = function ListComponent_Factory(t) {\n        return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.RequestService), i0.ɵɵdirectiveInject(i1.AccountService), i0.ɵɵdirectiveInject(i1.EmployeeService), i0.ɵɵdirectiveInject(i1.AlertService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i2.ActivatedRoute));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: ListComponent,\n        selectors: [[\"ng-component\"]],\n        decls: 12,\n        vars: 5,\n        consts: [[1, \"card\"], [1, \"card-header\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [1, \"mb-0\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"], [1, \"card-body\"], [\"class\", \"text-center my-3\", 4, \"ngIf\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-info text-center\", 4, \"ngIf\"], [\"class\", \"table-responsive\", 4, \"ngIf\"], [1, \"text-center\", \"my-3\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-primary\"], [1, \"mt-2\"], [1, \"alert\", \"alert-danger\"], [1, \"alert\", \"alert-info\", \"text-center\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table-responsive\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"text-muted\", 4, \"ngIf\"], [1, \"badge\", 3, \"ngClass\"], [1, \"d-flex\", \"flex-wrap\", 2, \"gap\", \"8px\"], [\"class\", \"btn btn-sm btn-danger\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"mb-1\", 4, \"ngFor\", \"ngForOf\"], [1, \"mb-1\"], [1, \"text-muted\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"]],\n        template: function ListComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h5\", 3);\n            i0.ɵɵtext(4);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"button\", 4);\n            i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_5_listener() {\n              return ctx.add();\n            });\n            i0.ɵɵtext(6, \"Add Request\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(7, \"div\", 5);\n            i0.ɵɵtemplate(8, ListComponent_div_8_Template, 4, 0, \"div\", 6)(9, ListComponent_div_9_Template, 5, 1, \"div\", 7)(10, ListComponent_div_10_Template, 5, 0, \"div\", 8)(11, ListComponent_div_11_Template, 16, 1, \"div\", 9);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(4);\n            i0.ɵɵtextInterpolate1(\"Requests \", ctx.employeeIdFilter ? \"for Employee \" + ctx.employeeIdFilter : \"\", \"\");\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.loading);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.error && (ctx.requests == null ? null : ctx.requests.length) === 0);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.loading && !ctx.error && (ctx.requests == null ? null : ctx.requests.length) > 0);\n          }\n        },\n        dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n        encapsulation: 2\n      });\n    }\n  }\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}