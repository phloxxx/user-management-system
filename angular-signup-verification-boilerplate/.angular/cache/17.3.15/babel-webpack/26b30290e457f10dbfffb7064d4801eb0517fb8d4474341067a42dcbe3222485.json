{"ast":null,"code":"import { first } from 'rxjs/operators';\nimport { Role } from '@app/_models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@app/_services/employee.service\";\nimport * as i3 from \"@app/_services/department.service\";\nimport * as i4 from \"@app/_services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nconst _c0 = a0 => ({\n  \"is-invalid\": a0\n});\nfunction AddEditComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23)(1, \"strong\");\n    i0.ɵɵtext(2, \"Error:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementStart(4, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_5_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearError());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.errorMessage, \" \");\n  }\n}\nfunction AddEditComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 26);\n    i0.ɵɵlistener(\"click\", function AddEditComponent_div_6_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.clearSuccess());\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.successMessage, \" \");\n  }\n}\nfunction AddEditComponent_small_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 16);\n    i0.ɵɵtext(1, \" Automatically generated. Admin users can modify if needed. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Employee ID is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_option_23_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" [INACTIVE]\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction AddEditComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, AddEditComponent_option_23_ng_container_2_Template, 2, 0, \"ng-container\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", user_r4.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate2(\" \", user_r4.email, \" (\", user_r4.role, \") \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", user_r4.isActive === false);\n  }\n}\nfunction AddEditComponent_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Account is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Position is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 28);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dept_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dept_r5.id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(dept_r5.name);\n  }\n}\nfunction AddEditComponent_div_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Department is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Hire date is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AddEditComponent_div_63_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵtext(1, \"Status is required\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let AddEditComponent = /*#__PURE__*/(() => {\n  class AddEditComponent {\n    constructor(router, route, employeeService, departmentService, accountService, alertService, location // Add Location service\n    ) {\n      this.router = router;\n      this.route = route;\n      this.employeeService = employeeService;\n      this.departmentService = departmentService;\n      this.accountService = accountService;\n      this.alertService = alertService;\n      this.location = location;\n      this.isEditMode = false;\n      this.employee = {\n        employeeId: '',\n        userId: null,\n        position: '',\n        departmentId: null,\n        hireDate: '',\n        status: 'Active'\n      };\n      this.errorMessage = '';\n      this.successMessage = '';\n      this.users = [];\n      this.departments = [];\n      this.allEmployees = [];\n      this.availableUsers = []; // Filtered list of available users\n      this.submitted = false;\n    }\n    ngOnInit() {\n      this.id = this.route.snapshot.params['id'];\n      this.isEditMode = !!this.id;\n      // Load departments\n      this.departmentService.getAll().pipe(first()).subscribe({\n        next: departments => this.departments = departments,\n        error: error => this.alertService.error('Error loading departments: ' + error)\n      });\n      // Load users and filter available ones\n      this.accountService.getAll().pipe(first()).subscribe({\n        next: users => {\n          this.users = users;\n          this.loadEmployeesForFiltering();\n        },\n        error: error => this.alertService.error('Error loading users: ' + error)\n      });\n      if (this.isEditMode) {\n        // Load employee data\n        this.employeeService.getById(this.id).pipe(first()).subscribe({\n          next: employee => this.employee = employee,\n          error: error => {\n            this.alertService.error('Error loading employee: ' + error);\n            this.errorMessage = 'Could not load employee data';\n          }\n        });\n      } else {\n        // If adding a new employee, get all employees to generate a proper ID\n        this.employeeService.getAll().pipe(first()).subscribe({\n          next: employees => {\n            this.allEmployees = employees;\n            this.generateEmployeeId();\n          }\n        });\n      }\n    }\n    save() {\n      this.submitted = true;\n      this.clearMessages();\n      // Return if form is invalid\n      if (this.isFormInvalid()) {\n        this.errorMessage = 'Please complete all required fields before saving.';\n        return;\n      }\n      try {\n        if (this.id) {\n          // Update employee\n          this.employeeService.update(this.id, this.employee).pipe(first()).subscribe({\n            next: () => {\n              this.successMessage = 'Employee updated successfully';\n              setTimeout(() => this.router.navigate(['../'], {\n                relativeTo: this.route\n              }), 1500);\n            },\n            error: error => {\n              this.errorMessage = error;\n            }\n          });\n        } else {\n          // Create new employee\n          this.employeeService.create(this.employee).pipe(first()).subscribe({\n            next: response => {\n              this.successMessage = 'Employee added successfully. An onboarding workflow has been created.';\n              setTimeout(() => this.router.navigate(['../'], {\n                relativeTo: this.route\n              }), 1500);\n            },\n            error: error => {\n              this.errorMessage = error;\n            }\n          });\n        }\n      } catch (err) {\n        this.errorMessage = 'An unexpected error occurred. Please try again.';\n        console.error(err);\n      }\n    }\n    cancel() {\n      this.submitted = false;\n      this.clearMessages();\n      // Use location.back() for true backtracking functionality\n      this.location.back();\n    }\n    // Check if the current user is an admin\n    isAdmin() {\n      return this.accountService.accountValue?.role === Role.Admin;\n    }\n    // Generate a new employee ID based on existing format\n    generateEmployeeId() {\n      if (this.allEmployees.length === 0) {\n        // Default start if no employees exist\n        this.employee.employeeId = 'EMP001';\n        return;\n      }\n      // Find the highest employee ID number\n      let highestNumber = 0;\n      const prefix = 'EMP';\n      this.allEmployees.forEach(emp => {\n        if (emp.employeeId && emp.employeeId.startsWith(prefix)) {\n          // Extract numeric part\n          const numStr = emp.employeeId.substring(prefix.length);\n          const num = parseInt(numStr, 10);\n          if (!isNaN(num) && num > highestNumber) {\n            highestNumber = num;\n          }\n        }\n      });\n      // Format the new ID with leading zeros\n      const nextNumber = highestNumber + 1;\n      const paddedNumber = nextNumber.toString().padStart(3, '0');\n      this.employee.employeeId = `${prefix}${paddedNumber}`;\n    }\n    // Load all employees to check which accounts are already assigned\n    loadEmployeesForFiltering() {\n      this.employeeService.getAll().pipe(first()).subscribe({\n        next: employees => {\n          this.allEmployees = employees;\n          this.filterAvailableUsers();\n        },\n        error: error => this.alertService.error('Error loading employees: ' + error)\n      });\n    }\n    // Filter users to only show active and unassigned accounts\n    filterAvailableUsers() {\n      // Get list of user IDs that are already assigned to employees\n      const assignedUserIds = this.allEmployees.filter(emp => emp.id !== parseInt(this.id || '0')) // Exclude current employee when editing\n      .map(emp => emp.userId);\n      // Filter to only active accounts that aren't already assigned\n      this.availableUsers = this.users.filter(user => {\n        // Include active accounts that aren't assigned or are assigned to the current employee\n        const isActive = user.isActive !== false; // Consider undefined as active\n        const isUnassigned = !assignedUserIds.includes(user.id);\n        const isCurrentUserAccount = this.employee.userId === user.id;\n        return isActive && (isUnassigned || isCurrentUserAccount);\n      });\n      // Log for debugging\n      console.log('Available users for selection:', this.availableUsers);\n      // If editing and the current user is not in available users, add them\n      if (this.isEditMode && this.employee.userId) {\n        const currentUser = this.users.find(u => u.id === this.employee.userId);\n        if (currentUser && !this.availableUsers.some(u => u.id === currentUser.id)) {\n          this.availableUsers.push(currentUser);\n        }\n      }\n    }\n    // Add this method to check if the form is invalid\n    isFormInvalid() {\n      return !this.employee.employeeId || !this.employee.userId || !this.employee.position || !this.employee.departmentId || !this.employee.hireDate || !this.employee.status;\n    }\n    clearError() {\n      this.errorMessage = '';\n    }\n    clearSuccess() {\n      this.successMessage = '';\n    }\n    clearMessages() {\n      this.errorMessage = '';\n      this.successMessage = '';\n    }\n    static {\n      this.ɵfac = function AddEditComponent_Factory(t) {\n        return new (t || AddEditComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.EmployeeService), i0.ɵɵdirectiveInject(i3.DepartmentService), i0.ɵɵdirectiveInject(i4.AccountService), i0.ɵɵdirectiveInject(i4.AlertService), i0.ɵɵdirectiveInject(i5.Location));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AddEditComponent,\n        selectors: [[\"app-add-edit\"]],\n        decls: 70,\n        vars: 41,\n        consts: [[1, \"card\"], [1, \"card-header\", \"bg-light\"], [1, \"mb-0\"], [1, \"card-body\"], [\"class\", \"alert alert-danger\", 4, \"ngIf\"], [\"class\", \"alert alert-success alert-dismissible fade show\", 4, \"ngIf\"], [1, \"mb-3\"], [1, \"form-label\"], [1, \"text-danger\"], [\"type\", \"text\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"disabled\", \"title\", \"ngClass\"], [\"class\", \"form-text text-muted\", 4, \"ngIf\"], [\"class\", \"invalid-feedback\", 4, \"ngIf\"], [1, \"form-label\", \"d-block\"], [1, \"form-select\", \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [3, \"ngValue\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"form-text\", \"text-muted\"], [\"type\", \"text\", \"placeholder\", \"Enter position\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [\"type\", \"date\", 1, \"form-control\", 3, \"ngModelChange\", \"ngModel\", \"ngClass\"], [1, \"text-center\", \"mt-4\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [2, \"display\", \"inline-block\", \"width\", \"10px\"], [1, \"btn\", \"btn-secondary\", 3, \"click\"], [1, \"alert\", \"alert-danger\"], [\"type\", \"button\", 1, \"btn-close\", \"float-end\", 3, \"click\"], [1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", 1, \"btn-close\", 3, \"click\"], [1, \"invalid-feedback\"], [3, \"value\"], [4, \"ngIf\"]],\n        template: function AddEditComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n            i0.ɵɵtext(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(4, \"div\", 3);\n            i0.ɵɵtemplate(5, AddEditComponent_div_5_Template, 5, 1, \"div\", 4)(6, AddEditComponent_div_6_Template, 3, 1, \"div\", 5);\n            i0.ɵɵelementStart(7, \"div\", 6)(8, \"label\", 7);\n            i0.ɵɵtext(9, \"Employee ID \");\n            i0.ɵɵelementStart(10, \"span\", 8);\n            i0.ɵɵtext(11, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"input\", 9);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_input_ngModelChange_12_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.employeeId, $event) || (ctx.employee.employeeId = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(13, AddEditComponent_small_13_Template, 2, 0, \"small\", 10)(14, AddEditComponent_div_14_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(15, \"div\", 6)(16, \"label\", 12);\n            i0.ɵɵtext(17, \"Account \");\n            i0.ɵɵelementStart(18, \"span\", 8);\n            i0.ɵɵtext(19, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(20, \"select\", 13);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_select_ngModelChange_20_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.userId, $event) || (ctx.employee.userId = $event);\n              return $event;\n            });\n            i0.ɵɵelementStart(21, \"option\", 14);\n            i0.ɵɵtext(22, \"-- Select Account --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(23, AddEditComponent_option_23_Template, 3, 4, \"option\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(24, \"small\", 16);\n            i0.ɵɵtext(25, \" Only active and unassigned accounts are available for selection. \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(26, AddEditComponent_div_26_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(27, \"div\", 6)(28, \"label\", 7);\n            i0.ɵɵtext(29, \"Position \");\n            i0.ɵɵelementStart(30, \"span\", 8);\n            i0.ɵɵtext(31, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(32, \"input\", 17);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_input_ngModelChange_32_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.position, $event) || (ctx.employee.position = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(33, AddEditComponent_div_33_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(34, \"div\", 6)(35, \"label\", 12);\n            i0.ɵɵtext(36, \"Department \");\n            i0.ɵɵelementStart(37, \"span\", 8);\n            i0.ɵɵtext(38, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(39, \"select\", 13);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_select_ngModelChange_39_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.departmentId, $event) || (ctx.employee.departmentId = $event);\n              return $event;\n            });\n            i0.ɵɵelementStart(40, \"option\", 14);\n            i0.ɵɵtext(41, \"-- Select Department --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(42, AddEditComponent_option_42_Template, 2, 2, \"option\", 15);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(43, AddEditComponent_div_43_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(44, \"div\", 6)(45, \"label\", 7);\n            i0.ɵɵtext(46, \"Hire Date \");\n            i0.ɵɵelementStart(47, \"span\", 8);\n            i0.ɵɵtext(48, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(49, \"input\", 18);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_input_ngModelChange_49_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.hireDate, $event) || (ctx.employee.hireDate = $event);\n              return $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(50, AddEditComponent_div_50_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(51, \"div\", 6)(52, \"label\", 12);\n            i0.ɵɵtext(53, \"Status \");\n            i0.ɵɵelementStart(54, \"span\", 8);\n            i0.ɵɵtext(55, \"*\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(56, \"select\", 13);\n            i0.ɵɵtwoWayListener(\"ngModelChange\", function AddEditComponent_Template_select_ngModelChange_56_listener($event) {\n              i0.ɵɵtwoWayBindingSet(ctx.employee.status, $event) || (ctx.employee.status = $event);\n              return $event;\n            });\n            i0.ɵɵelementStart(57, \"option\", 14);\n            i0.ɵɵtext(58, \"-- Select Status --\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(59, \"option\");\n            i0.ɵɵtext(60, \"Active\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(61, \"option\");\n            i0.ɵɵtext(62, \"Inactive\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵtemplate(63, AddEditComponent_div_63_Template, 2, 0, \"div\", 11);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(64, \"div\", 19)(65, \"button\", 20);\n            i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_65_listener() {\n              return ctx.save();\n            });\n            i0.ɵɵtext(66, \"Save\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(67, \"span\", 21);\n            i0.ɵɵelementStart(68, \"button\", 22);\n            i0.ɵɵlistener(\"click\", function AddEditComponent_Template_button_click_68_listener() {\n              return ctx.cancel();\n            });\n            i0.ɵɵtext(69, \"Cancel\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(3);\n            i0.ɵɵtextInterpolate1(\"\", ctx.id ? \"EDIT\" : \"ADD\", \" EMPLOYEE\");\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.successMessage);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.employeeId);\n            i0.ɵɵproperty(\"disabled\", !!ctx.id || !ctx.isAdmin())(\"title\", !ctx.isAdmin() ? \"Only admins can change employee IDs\" : \"\")(\"ngClass\", i0.ɵɵpureFunction1(29, _c0, ctx.submitted && !ctx.employee.employeeId));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.id);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.employeeId);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.userId);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(31, _c0, ctx.submitted && !ctx.employee.userId));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngValue\", null);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.availableUsers);\n            i0.ɵɵadvance(3);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.userId);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.position);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(33, _c0, ctx.submitted && !ctx.employee.position));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.position);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.departmentId);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(35, _c0, ctx.submitted && !ctx.employee.departmentId));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngValue\", null);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngForOf\", ctx.departments);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.departmentId);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.hireDate);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(37, _c0, ctx.submitted && !ctx.employee.hireDate));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.hireDate);\n            i0.ɵɵadvance(6);\n            i0.ɵɵtwoWayProperty(\"ngModel\", ctx.employee.status);\n            i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(39, _c0, ctx.submitted && !ctx.employee.status));\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngValue\", null);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngIf\", ctx.submitted && !ctx.employee.status);\n          }\n        },\n        dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel],\n        styles: [\".form-label[_ngcontent-%COMP%] {\\n        font-weight: 500;\\n        margin-bottom: 0.5rem;\\n        display: block;\\n    }\\n    \\n    .form-select[_ngcontent-%COMP%], .form-control[_ngcontent-%COMP%] {\\n        padding: 0.5rem;\\n        border-radius: 0.25rem;\\n        border: 1px solid #ced4da;\\n        background-color: #fff;\\n        height: 38px;\\n        width: 100%;\\n    }\\n    \\n    .form-select[_ngcontent-%COMP%] {\\n        appearance: auto;\\n        -webkit-appearance: auto;\\n    }\\n    \\n    .card-header[_ngcontent-%COMP%] {\\n        border-bottom: 1px solid rgba(0,0,0,.125);\\n    }\\n    \\n    .invalid-feedback[_ngcontent-%COMP%] {\\n        display: block;\\n        width: 100%;\\n        margin-top: 0.25rem;\\n        font-size: 80%;\\n        color: #dc3545;\\n    }\\n    \\n    .is-invalid[_ngcontent-%COMP%] {\\n        border-color: #dc3545;\\n    }\\n    \\n    .text-danger[_ngcontent-%COMP%] {\\n        color: #dc3545;\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%] {\\n        background: transparent;\\n        border: 0;\\n        font-size: 1.5rem;\\n        padding: 0.25rem;\\n        cursor: pointer;\\n        opacity: 0.5;\\n    }\\n    \\n    .btn-close[_ngcontent-%COMP%]:hover {\\n        opacity: 1;\\n    }\\n    \\n    .float-end[_ngcontent-%COMP%] {\\n        float: right;\\n    }\"]\n      });\n    }\n  }\n  return AddEditComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}